/* Node of a linked list
 class Node {
   int data;
    Node next;
    Node(int d)  { data = d;  next = null; }
}
*/

class gfg
{
        // Function  to split a circular LinkedList
	    void splitList(circular_LinkedList list)
        {
             //DO NOT REMOVE THESE 3 LINES
             /*Node head=list.head;
             Node head1=null;
             Node head2=null;
             
             //Modify these head1 and head2 here, head is the starting point of our original linked list.    
             
             
             //DO NOT REMOVE THESE 2 LINES
             list.head1=head1;
             list.head2=head2;*/
            Node one=list.head;
            Node two=list.head;
            Node ptr=list.head;
            int count=1;

            while(one.next!=ptr){
                one=one.next;
                count++;
            }

            int n=0;
            if(count%2==0){
                n=count/2;
            }
            
            else{
                n=count/2 + 1;
            }
            
            for(int i=1;i<n;i++){
                two=two.next;
            }

            list.head1=ptr;
            list.head2=two.next;
            two.next=list.head1;
            one.next=list.head2;
        }
}
